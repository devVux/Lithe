name: Windows CI

on:
  push:
    branches: [ master, dev, actions ]
  pull_request:
    branches: [ master, dev ]
  workflow_dispatch:


jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - compiler: clang
            config: debug
            preset: win-debug
            build_preset: windows-debug
          - compiler: clang
            config: release
            preset: win-release
            build_preset: windows-release
          - compiler: msvc
            config: debug
            preset: vs2022-debug
            build_preset: vs2022-debug
          - compiler: msvc
            config: release
            preset: vs2022-release
            build_preset: vs2022-release

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install vcpkg
      run: |
        ./vendor/vcpkg/bootstrap-vcpkg.bat

    - name: Setup LLVM/Clang (if using Clang)
      if: matrix.compiler == 'clang'
      uses: KyleMayes/install-llvm-action@v2
      with:
        version: "18.1.8"

    - name: Install Ninja (if using Clang)
      if: matrix.compiler == 'clang'
      run: |
          if (-not (Get-Command ninja -ErrorAction SilentlyContinue)) {
              choco install ninja -y
          }

    - name: Configure CMake
      run: cmake --preset=${{ matrix.preset }}

    - name: Build
      run: cmake --build --preset=${{ matrix.build_preset }}

